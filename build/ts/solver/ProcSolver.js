var _a;
import cluster from 'cluster';
import { counter } from '../CardBattle';
import Analysis from './Analysis';
if (cluster.isWorker) {
    const id = cluster.worker.id;
    const pid = `[${id.toString().blue}]`;
    const log = console.log;
    console.log = () => 0;
    log(`${pid} ${'Process Started'.grey}`);
    (_a = process.send) === null || _a === void 0 ? void 0 : _a.call(process, { msg: "ready" });
    process.on('message', async (data) => {
        var _a;
        log(`[${data.id.toString().yellow}] ${'Analysis Started'.grey}`);
        const m = await Analysis.iterTree(data.game, true);
        log(`[${data.id.toString().yellow}] ${'Analysis Finished'.grey}`);
        (_a = process.send) === null || _a === void 0 ? void 0 : _a.call(process, m);
    });
    let prevCount = 0, prevTime = +new Date();
    setInterval(() => {
        const t = +new Date();
        const dt = (t - prevTime) / 1000;
        const dcount = counter - prevCount;
        if (dcount > 0) {
            const rate = Math.floor(dcount / dt);
            const srate = rate < 1000 ? rate :
                rate < 1e6 ? `${rate / 1000}k` : `${rate / 1000000}M`;
            const msg = ` ${srate} CardBattles/sec `;
            if (rate < 100)
                log(`${pid} ${msg.bgRed.white}\n`);
            else if (rate < 5000)
                log(`${pid} ${msg.bgYellow.white}\n`);
            else if (rate < 15000)
                log(`${pid} ${msg.bgBlue.white}\n`);
            else if (rate < 30000)
                log(`${pid} ${msg.bgMagenta.white}\n`);
            else
                log(`${pid} ${msg.bgGreen.white}\n`);
        }
        prevCount = counter;
        prevTime = t;
    }, 5000);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvY1NvbHZlci5qcyIsInNvdXJjZVJvb3QiOiIvQzovVXNlcnMvU3R1ZGVudC9Eb2N1bWVudHMvTm9kZUpTV29ya3NwYWNlL1VyYmFuUmVjcmVhdGlvbi9zcmMvIiwic291cmNlcyI6WyJ0cy9zb2x2ZXIvUHJvY1NvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxPQUFPLE1BQU0sU0FBUyxDQUFBO0FBQzdCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEMsT0FBTyxRQUFRLE1BQU0sWUFBWSxDQUFDO0FBRWxDLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtJQUNwQixNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztJQUM3QixNQUFNLEdBQUcsR0FBRyxJQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEdBQUcsQ0FBQTtJQUVyQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBQ3hCLE9BQU8sQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXRCLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXhDLE1BQUEsT0FBTyxDQUFDLElBQUksK0NBQVosT0FBTyxFQUFRLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFPakMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQXNCLEVBQUUsRUFBRTs7UUFHckQsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEtBQUssa0JBQWtCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNqRSxNQUFNLENBQUMsR0FBRyxNQUFNLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVuRCxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sS0FBSyxtQkFBbUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLE1BQUEsT0FBTyxDQUFDLElBQUksK0NBQVosT0FBTyxFQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFBO0lBWUYsSUFBSSxTQUFTLEdBQUcsQ0FBQyxFQUNmLFFBQVEsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7SUFDekIsV0FBVyxDQUFDLEdBQUcsRUFBRTtRQUNmLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUN0QixNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDakMsTUFBTSxNQUFNLEdBQUcsT0FBTyxHQUFHLFNBQVMsQ0FBQztRQUNuQyxJQUFJLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDZCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztZQUNyQyxNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLE9BQU8sR0FBRyxDQUFDO1lBQ3hELE1BQU0sR0FBRyxHQUFHLElBQUksS0FBSyxtQkFBbUIsQ0FBQztZQUV6QyxJQUFJLElBQUksR0FBRyxHQUFHO2dCQUNaLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUE7aUJBQy9CLElBQUksSUFBSSxHQUFHLElBQUk7Z0JBQ2xCLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUE7aUJBQ2xDLElBQUksSUFBSSxHQUFHLEtBQUs7Z0JBQ25CLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUE7aUJBQ2hDLElBQUksSUFBSSxHQUFHLEtBQUs7Z0JBQ25CLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUE7O2dCQUV0QyxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFBO1NBQ3ZDO1FBRUQsU0FBUyxHQUFHLE9BQU8sQ0FBQztRQUNwQixRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO0NBQ1QifQ==